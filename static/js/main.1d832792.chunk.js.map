{"version":3,"sources":["components/ListProyect/ItemList.jsx","components/ListProyect/ListProyect.jsx","components/Options/Options.jsx","components/Redes/Redes.jsx","components/Skills/Skills.jsx","components/Cv/Cv.jsx","chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","App.js","index.js"],"names":["colors","Nodejs","Javascript","Java","Android","React","MySql","ListProyect","links","name","img","type","className","src","alt","map","item","key","target","rel","href","data","id","url","text","image","Options","props","buttonsMarkup","handler","actionProvider","handleAbout","handleSkills","handleProyect","handleContact","handleCv","handleCommand","option","onClick","Redes","xmlns","width","height","viewBox","d","SVG","Skills","Cv","config","botName","initialMessages","createChatBotMessage","widget","widgets","widgetName","widgetFunc","ActionProvider","setStateFunc","greet","message","addMessageToState","ungreet","ty","notFound","handleNav","handleHow","setState","prevState","messages","this","MessageParser","lowerCase","toLowerCase","includes","App","messageParser","ReactDOM","render","document","getElementById"],"mappings":"2qEAGMA,G,KAAS,CACbC,OAAQ,aACRC,WAAY,UACZC,KAAM,WACNC,QAAS,cACTC,MAAO,aACPC,MAAO,YACP,YAAa,eAEA,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,KACtD,OACE,oCACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKH,EAAKI,IAAI,aAErB,yBAAKF,UAAU,aACb,4BAAKH,GACL,yBAAKG,UAAU,sBACZD,EAAKI,KAAI,SAACC,GAAD,OACR,0BAAMC,IAAKD,EAAMJ,UAAWZ,EAAOgB,IAChCA,OAIP,yBAAKJ,UAAU,yBACb,uBAAGM,OAAO,SAASC,IAAI,sBAAuBC,KAAMZ,EAAM,IAA1D,UACA,uBAAGU,OAAO,SAASC,IAAI,sBAAuBC,KAAMZ,EAAM,IAA1D,Y,WCzBG,SAASD,IACtB,OACE,yBAAKK,UAAU,aACZS,EAAKN,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAOC,IAAKD,EAAKM,GAAIV,UAAU,YAAaJ,MAAOQ,EAAKO,IAAMd,KAAMO,EAAKP,KAAMe,KAAMR,EAAKQ,KAAMd,IAAKM,EAAKS,MAAOd,KAAMK,EAAKL,W,UCcnHe,EAnBC,SAACC,GACf,IASMC,EATU,CACd,CAAEJ,KAAM,kBAAgBK,QAASF,EAAMG,eAAeC,YAAaT,GAAI,GACvE,CAAEE,KAAM,SAAUK,QAASF,EAAMG,eAAeE,aAAcV,GAAI,GAClE,CAAEE,KAAM,YAAaK,QAASF,EAAMG,eAAeG,cAAeX,GAAI,GACtE,CAAEE,KAAM,WAAYK,QAASF,EAAMG,eAAeI,cAAeZ,GAAI,GACrE,CAAEE,KAAM,KAAMK,QAASF,EAAMG,eAAeK,SAAUb,GAAI,GAC1D,CAAEE,KAAM,WAAYK,QAASF,EAAMG,eAAeM,cAAed,GAAI,IAGzCP,KAAI,SAACsB,GAAD,OAChC,4BAAQpB,IAAKoB,EAAOf,GAAIgB,QAASD,EAAOR,QAASjB,UAAU,iBACxDyB,EAAOb,SAIZ,OAAO,yBAAKZ,UAAU,qBAAqBgB,I,MClB9B,SAASW,IACtB,OACE,oCACE,yBAAK3B,UAAU,gBACf,uBAAGA,UAAU,cAAcQ,KAAM,gCAAiCF,OAAO,SAASC,IAAI,uBACpF,0BAAMP,UAAU,yBAAyBU,GAAG,UAC1C,yBACEkB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,+sBAEV,8CAGJ,uBAAGhC,UAAU,cAAcQ,KAAM,0CAA2CF,OAAO,SAASC,IAAI,uBAChG,0BAAMP,UAAU,yBAAyBU,GAAG,YAC/C,yBAAKkB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAAY,0BAAMC,EAAE,sPAA0P,mD,WCjBlVC,G,MAAM,CACR5C,OAAQ,sBACRC,WAAY,kBACZC,KAAM,oBACNC,QAAS,wBACTC,MAAO,qBACPC,MAAO,qBACP,YAAa,sBACb,UAAa,yBACb,SAAY,wBACZ,IAAO,mBACP,KAAM,sBACN,KAAQ,oBACR,IAAO,mBACP,IAAO,qBAEI,SAASwC,IACtB,OACE,oCACE,yBAAKlC,UAAU,gBACHS,EAAKN,KAAI,SAACC,GAAD,OACL,0BAAMC,IAAKD,EAAMJ,UAAU,eAC3B,0BAAOA,UAAU,0BACjB,yBAAKC,IAAKgC,EAAI7B,GAAQF,IAAI,gBACxB,8BAAOE,U,MC1BhB,SAAS+B,IACpB,OACQ,uBAAGnC,UAAU,eAAeQ,KAAM,qBAAsBF,OAAO,SAASC,IAAI,uBAAsB,yBAAKN,IAAK,qBAAuBC,IAAI,oBCGnJ,IA4BekC,EA3BA,CACbC,QAFc,UAGdC,gBAAiB,CACfC,+BAAqB,qBAAD,OAJR,UAIQ,2CAA+D,CACjFC,OAAQ,aAGZC,QAAS,CACP,CACEC,WAAY,UACZC,WAAY,SAAC5B,GAAD,OAAW,kBAAC,EAAYA,KAClC,CACF2B,WAAY,aACZC,WAAY,SAAC5B,GAAD,OAAW,kBAAC,EAAgBA,KACvC,CACD2B,WAAY,QACZC,WAAY,SAAC5B,GAAD,OAAW,kBAAC,EAAUA,KACjC,CACD2B,WAAY,cACZC,WAAY,SAAC5B,GAAD,OAAW,kBAAC,EAAWA,KAClC,CACD2B,WAAY,KACZC,WAAY,SAAC5B,GAAD,OAAW,kBAAC,EAAOA,O,sBCyEtB6B,EAtGb,WAAYL,EAAsBM,GAAe,IAAD,gCAKhDC,MAAQ,WACN,IAAMC,EAAU,EAAKR,qBAAqB,kCAC1C,EAAKS,kBAAkBD,IAPuB,KAShDE,QAAU,WACR,IAAMF,EAAU,EAAKR,qBAAqB,2EAC1C,EAAKS,kBAAkBD,IAXuB,KAahDG,GAAK,WACH,IAAMH,EAAU,EAAKR,qBAAqB,iDAC1C,EAAKS,kBAAkBD,IAfuB,KAiBhDI,SAAW,WACT,IAAMJ,EAAU,EAAKR,qBACnB,6FAEF,EAAKS,kBAAkBD,IArBuB,KAwBhD1B,cAAgB,WACd,IAAM0B,EAAU,EAAKR,qBACnB,wDACA,CACEC,OAAQ,eAIZ,EAAKQ,kBAAkBD,IAhCuB,KAkChD3B,aAAe,WACb,IAAM2B,EAAU,EAAKR,qBACnB,kDACA,CACEC,OAAQ,gBAIZ,EAAKQ,kBAAkBD,IA1CuB,KA4ChDK,UAAY,WACV,IAAML,EAAU,EAAKR,qBACnB,eACA,CACEC,OAAQ,YAIZ,EAAKQ,kBAAkBD,IApDuB,KAsDhDM,UAAW,WACT,IAAMN,EAAU,EAAKR,qBACnB,2FAEF,EAAKS,kBAAkBD,IA1DuB,KA4DhDzB,cAAgB,WACd,IAAMyB,EAAU,EAAKR,qBACnB,wEACA,CACEC,OAAQ,UAGZ,EAAKQ,kBAAkBD,IAnEuB,KAqEhDxB,SAAW,WACT,IAAMwB,EAAU,EAAKR,qBACnB,6BACA,CACEC,OAAQ,OAGZ,EAAKQ,kBAAkBD,IA5EuB,KA+EhDvB,cAAgB,WACd,IAAMuB,EAAU,EAAKR,qBACnB,+JAEF,EAAKS,kBAAkBD,IAnFuB,KAsFhD5B,YAAc,WACZ,IAAM4B,EAAU,EAAKR,qBACnB,+iBAEF,EAAKS,kBAAkBD,IA1FuB,KA6FhDC,kBAAoB,SAACD,GACnB,EAAKO,UAAS,SAACC,GAAD,sBACTA,EADS,CAEZC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0BT,UA/FpCU,KAAKlB,qBAAuBA,EAC5BkB,KAAKH,SAAWT,G,OCgDLa,E,WAlDb,WAAYxC,GAAiB,oBAC3BuC,KAAKvC,eAAiBA,E,kDAGlB6B,GACJ,IAAMY,EAAYZ,EAAQa,cAE1B,OACGD,EAAUE,SAAS,SACnBF,EAAUE,SAAS,SACnBF,EAAUE,SAAS,YACnBF,EAAUE,SAAS,eACnBF,EAAUE,SAAS,QACnBF,EAAUE,SAAS,OACnBF,EAAUE,SAAS,SACnBF,EAAUE,SAAS,aACnBF,EAAUE,SAAS,UAIlBF,EAAUE,SAAS,QACdJ,KAAKvC,eAAe4B,SAEzBa,EAAUE,SAAS,WACrBJ,KAAKvC,eAAeE,eAElBuC,EAAUE,SAAS,OACrBJ,KAAKvC,eAAeK,WAElBoC,EAAUE,SAAS,aACrBJ,KAAKvC,eAAeI,gBAElBqC,EAAUE,SAAS,YACrBJ,KAAKvC,eAAegC,KAElBS,EAAUE,SAAS,eACrBJ,KAAKvC,eAAemC,YAElBM,EAAUE,SAAS,QACdJ,KAAKvC,eAAekC,YAEzBO,EAAUE,SAAS,OACdJ,KAAKvC,eAAeM,gBAEzBmC,EAAUE,SAAS,QACdJ,KAAKvC,eAAe+B,aAD7B,GA1BSQ,KAAKvC,eAAeiC,e,KCGlBW,MAdf,WACE,OACE,yBAAK9D,UAAU,OACb,6BACE,kBAAC,IAAD,CACEoC,OAAQA,EACRlB,eAAgB0B,EAChBmB,cAAeL,OCTzBM,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.1d832792.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ListProyect.css\";\r\nconst colors = {\r\n  Nodejs: \"tag nodejs\",\r\n  Javascript: \"tag  js\",\r\n  Java: \"tag java\",\r\n  Android: \"tag android\",\r\n  React: \"tag  react\",\r\n  MySql: \"tag mysql\",\r\n  \"Chakra-ui\": \"tag chakra\",\r\n};\r\nexport default function ListProyect({ links, name, img, type }) {\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <img src={img} alt=\"project\" />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h4>{name}</h4>\r\n          <div className=\"tag-container-grid\">\r\n            {type.map((item) => (\r\n              <span key={item} className={colors[item]}>\r\n                {item}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <div className=\"button-container-grid\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\"  href={links[0]} >DEPLOY</a>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\"  href={links[1]}>CODE</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Item from \"./ItemList\"\r\nimport \"./ListProyect.css\";\r\nimport data from \"./data.json\";\r\n\r\nexport default function ListProyect() {\r\n  return (\r\n    <div className=\"container\">\r\n      {data.map((item) => (\r\n      <Item  key={item.id} className=\"item-list\"  links={item.url}  name={item.name} text={item.text} img={item.image} type={item.type}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Options.css\";\r\n\r\nconst Options = (props) => {\r\n  const options = [\r\n    { text: \"Acerca de MÍ\", handler: props.actionProvider.handleAbout, id: 1 },\r\n    { text: \"Skills\", handler: props.actionProvider.handleSkills, id: 2 },\r\n    { text: \"Proyectos\", handler: props.actionProvider.handleProyect, id: 3 },\r\n    { text: \"Contacto\", handler: props.actionProvider.handleContact, id: 4 },\r\n    { text: \"CV\", handler: props.actionProvider.handleCv, id: 5 },\r\n    { text: \"Comandos\", handler: props.actionProvider.handleCommand, id: 6 },\r\n  ];\r\n\r\n  const buttonsMarkup = options.map((option) => (\r\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"options-container\">{buttonsMarkup}</div>;\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport \"./Redes.css\"\r\nexport default function Redes() {\r\n  return (\r\n    <>\r\n      <div className='social-links'>\r\n      <a className=\"flex-center\" href={\"https://github.com/agustinmme\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <span className=\"social-btn flex-center\" id=\"github\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n          </svg>\r\n          <span>agustinmme</span>\r\n        </span>\r\n      </a>\r\n      <a className=\"flex-center\" href={\"https://www.linkedin.com/in/agustinmme/\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <span className='social-btn flex-center' id=\"linkedin\">\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\"/></svg><span>in/agustinmme</span>\r\n\t\t</span>\r\n        </a>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport data from './data.json'\r\nimport \"./Skills.css\"\r\n\r\nconst SVG = {\r\n    Nodejs: \"./images/nodejs.svg\",\r\n    Javascript: \"./images/js.svg\",\r\n    Java: \"./images/java.svg\",\r\n    Android: \"./images/firebase.svg\",\r\n    React: \"./images/react.svg\",\r\n    MySql: \"./images/mysql.svg\",\r\n    \"Chakra-ui\": \"./images/chakra.svg\",\r\n    \"SqlServer\": \"./images/sqlserver.svg\",\r\n    \"Firebase\": \"./images/firebase.svg\",\r\n    \"Git\": \"./images/git.svg\",\r\n    \"C#\": \"./images/csharp.svg\",\r\n    \"HTML\": \"./images/html.svg\",\r\n    \"CSS\": \"./images/css.svg\",\r\n    \"npm\": \"./images/npm.svg\",\r\n  };\r\nexport default function Skills() {\r\n  return (\r\n    <>\r\n      <div className='social-links'>\r\n                 {data.map((item) => (\r\n                      <span key={item} className=\"flex-center\">\r\n                      <span  className=\"social-btn flex-center\">\r\n                      <img src={SVG[item]}  alt='logo,skills'/>\r\n                        <span>{item}</span>\r\n                      </span>\r\n                    </span>\r\n              ))}\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./Cv.css\"\r\nexport default function Cv() {\r\n    return (\r\n            <a className='container-cv' href={\"./Documents/CV.pdf\"} target=\"_blank\" rel=\"noopener noreferrer\"><img src={\"./images/image.png\"}  alt='pdf,cv,agustin'/></a>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport ListProyect from '../components/ListProyect/ListProyect'\r\nimport Options from \"../components/Options/Options\";\r\nimport Redes from \"../components/Redes/Redes\"\r\nimport Skills from \"../components/Skills/Skills\"\r\nimport Cv from \"../components/Cv/Cv\"\r\nconst botName = \"Agustin\";\r\nconst config = {\r\n  botName: botName,\r\n  initialMessages: [\r\n    createChatBotMessage(`¡Hola! ¡Soy ${botName}! Contame, ¿Que quieres saber de mi?`, {\r\n      widget: \"options\",\r\n    }),\r\n  ],\r\n  widgets: [\r\n    {\r\n      widgetName: \"options\",\r\n      widgetFunc: (props) => <Options {...props} />,\r\n    },  {\r\n      widgetName: \"challenges\",\r\n      widgetFunc: (props) => <ListProyect {...props} />,\r\n    }, {\r\n      widgetName: \"redes\",\r\n      widgetFunc: (props) => <Redes {...props} />,\r\n    }, {\r\n      widgetName: \"habilidades\",\r\n      widgetFunc: (props) => <Skills {...props} />,\r\n    }, {\r\n      widgetName: \"cv\",\r\n      widgetFunc: (props) => <Cv {...props} />,\r\n    }\r\n  ],\r\n};\r\n\r\nexport default config;\r\n","class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  greet = () => {\r\n    const message = this.createChatBotMessage(\"¡Hola! Lindo día ¿no?\");\r\n    this.addMessageToState(message);\r\n  };\r\n  ungreet = () => {\r\n    const message = this.createChatBotMessage(\"¡Chau! 👋  Me quedo acá para ayudarte cuando necesites \");\r\n    this.addMessageToState(message);\r\n  };\r\n  ty = () => {\r\n    const message = this.createChatBotMessage(\"¡De nada! Estoy para ayudarte 😃\");\r\n    this.addMessageToState(message);\r\n  };\r\n  notFound = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Por el momento no cuento con esa información. Tal vez pueda ayudarte con algo más. \"\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleProyect = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Dale, te pasos mis proyecto y challenges 😆\",\r\n      {\r\n        widget: \"challenges\",\r\n      }\r\n    );\r\n\r\n    this.addMessageToState(message);\r\n  };\r\n  handleSkills = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"👨‍💻 Mis habilidades:\",\r\n      {\r\n        widget: \"habilidades\",\r\n      }\r\n    );\r\n\r\n    this.addMessageToState(message);\r\n  };\r\n  handleNav = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"🤖\",\r\n      {\r\n        widget: \"options\",\r\n      }\r\n    );\r\n\r\n    this.addMessageToState(message);\r\n  };\r\n  handleHow= () => {\r\n    const message = this.createChatBotMessage(\r\n      \"¡Muy bien, gracias! 😊 Espero que vos también ¡Listo para ayudarte! \",\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n  handleContact = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Te dejo mi correo y redes :📧 agustinmansilla240@gmail.com \",\r\n      {\r\n        widget: \"redes\",\r\n      }\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n  handleCv = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Te dejo mi cv 📃\",\r\n      {\r\n        widget: \"cv\",\r\n      }\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleCommand = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"🤖 Mis comandos por ahora son: hola,chau,gracias,como estas,menu,conctacto,cmd,cv,skills. No es necesario tipearlos separados Ej: me pasas tu Cv?\",\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  handleAbout = () => {\r\n    const message = this.createChatBotMessage(\r\n      \"Hola,soy un programador en búsqueda de mi primer empleo en el área IT en el cual pueda aprender y desarrollarme como profesional mientras termino la carrera. Me considero una persona perseverante con gran capacidad de adaptación y aprendizaje, en constante búsqueda de nuevos conocimientos  y aprendizajes, con el objetivo de crecer como persona y como profesional. Disfruto de nuevos desafíos para probar mi capacidad constantemente, me gusta conocer gente nueva, tanto para trabajar en equipo como para compartir historias y experiencias.\"\r\n    );\r\n    this.addMessageToState(message);\r\n  };\r\n\r\n  addMessageToState = (message) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      messages: [...prevState.messages, message],\r\n    }));\r\n  };\r\n\r\n}\r\n\r\nexport default ActionProvider;\r\n","class MessageParser {\r\n  constructor(actionProvider) {\r\n    this.actionProvider = actionProvider;\r\n  }\r\n\r\n  parse(message) {\r\n    const lowerCase = message.toLowerCase();\r\n\r\n    if (\r\n      !lowerCase.includes(\"hola\") &&\r\n      !lowerCase.includes(\"chau\") &&\r\n      !lowerCase.includes(\"gracias\") &&\r\n      !lowerCase.includes(\"como estas\") &&\r\n      !lowerCase.includes(\"cmd\") &&\r\n      !lowerCase.includes(\"cv\") &&\r\n      !lowerCase.includes(\"menu\") &&\r\n      !lowerCase.includes(\"contacto\") &&\r\n      !lowerCase.includes(\"skills\")\r\n    ) {\r\n      return this.actionProvider.notFound();\r\n    }\r\n    if (lowerCase.includes(\"hola\")) {\r\n      return this.actionProvider.greet();\r\n    }\r\n    if (lowerCase.includes(\"skills\")) {\r\n      this.actionProvider.handleSkills();\r\n    }\r\n    if (lowerCase.includes(\"cv\")) {\r\n      this.actionProvider.handleCv();\r\n    }\r\n    if (lowerCase.includes(\"contacto\")) {\r\n      this.actionProvider.handleContact();\r\n    }\r\n    if (lowerCase.includes(\"gracias\")) {\r\n      this.actionProvider.ty();\r\n    }\r\n    if (lowerCase.includes(\"como estas\")) {\r\n      this.actionProvider.handleHow();\r\n    }\r\n    if (lowerCase.includes(\"menu\")) {\r\n      return this.actionProvider.handleNav();\r\n    }\r\n    if (lowerCase.includes(\"cmd\")) {\r\n      return this.actionProvider.handleCommand();\r\n    }\r\n    if (lowerCase.includes(\"chau\")) {\r\n      return this.actionProvider.ungreet;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;\r\n","import React from \"react\";\r\nimport Chatbot from \"react-chatbot-kit\";\r\n\r\nimport config from \"./chatbot/config\";\r\nimport ActionProvider from \"./chatbot/ActionProvider\";\r\nimport MessageParser from \"./chatbot/MessageParser\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Chatbot\r\n          config={config}\r\n          actionProvider={ActionProvider}\r\n          messageParser={MessageParser}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}